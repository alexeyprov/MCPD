<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.35" Name="My FxCop Project">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">http://www.gotdotnet.com/team/fxcop//xsl/1.35/FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-us" />
  <VersionAware>False</VersionAware>
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/bin/Debug/SecHostApp.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.35">
  <Targets>
   <Target Name="$(ProjectDir)/bin/Debug/SecHostApp.exe">
    <Modules>
     <Module Name="sechostapp.exe">
      <Messages>
       <Message TypeName="AssembliesShouldDeclareMinimumSecurity" Category="Microsoft.Usage" CheckId="CA2209" Created="2007-01-20 23:24:41Z">
        <Issue>
         <Item>SecHostApp</Item>
        </Issue>
       </Message>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2007-01-20 23:24:41Z">
        <Issue Name="NoStrongName">
         <Item>SecHostApp</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2007-01-20 23:24:41Z">
        <Issue Name="NoAttr">
         <Item>SecHostApp</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="SecHostApp">
        <Types>
         <Type Name="CustomPermission">
          <Members>
           <Member Name="Copy():System.Security.IPermission">
            <Messages>
             <Message TypeName="ReviewImperativeSecurity" Category="Microsoft.Security" CheckId="CA2103" Created="2007-01-20 23:24:41Z">
              <Issue Name="ClassMember">
               <Item>CustomPermission.Copy():IPermission</Item>
               <Item>_state</Item>
               <Item>SecHostApp.CustomPermission</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MainForm">
          <Members>
           <Member Name="GetAssemblyPath(System.String):System.String">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2007-01-20 23:24:41Z" FixCategory="NonBreaking">
              <Issue>
               <Item>MainForm.GetAssemblyPath(String):String</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InitializeComponent():System.Void">
            <Messages>
             <Message Id="System.Windows.Forms.ColumnHeader.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2007-01-20 23:24:41Z">
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>ColumnHeader.set_Text(String):Void</Item>
               <Item>Event</Item>
              </Issue>
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>ColumnHeader.set_Text(String):Void</Item>
               <Item>Result</Item>
              </Issue>
             </Message>
             <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Created="2007-01-20 23:24:41Z">
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>Control.set_Text(String):Void</Item>
               <Item>&amp;Custom permission</Item>
              </Issue>
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>Control.set_Text(String):Void</Item>
               <Item>&amp;Event Log</Item>
              </Issue>
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>Control.set_Text(String):Void</Item>
               <Item>&amp;Trusted Code</Item>
              </Issue>
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>Control.set_Text(String):Void</Item>
               <Item>&amp;Untrusted Code</Item>
              </Issue>
              <Issue>
               <Item>MainForm.InitializeComponent():Void</Item>
               <Item>1</Item>
               <Item>Control.set_Text(String):Void</Item>
               <Item>Security Test Application</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="InstallAppDomainPolicy():System.Void">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2007-01-20 23:24:41Z">
              <Issue>
               <Item>MainForm.InstallAppDomainPolicy():Void</Item>
               <Item>AppDomain.SetAppDomainPolicy(PolicyLevel):Void</Item>
               <Item>&#xD;&#xA;-&gt;System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel) : Void&#xD;&#xA;-&gt;SecHostApp.MainForm.InstallAppDomainPolicy : Void&#xD;&#xA;-&gt;SecHostApp.MainForm.#ctor : Void</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="LoadAssembly(System.String):System.Reflection.Assembly">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2007-01-20 23:24:41Z" FixCategory="NonBreaking">
              <Issue>
               <Item>MainForm.LoadAssembly(String):Assembly</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldDeclareMinimumSecurity" Category="Microsoft.Usage" CheckId="CA2209">
    <Resolution Name="Default">No valid permission requests were found for assembly '{0}'. You should always specify the minimum security permissions using SecurityAction.RequestMinimum.</Resolution>
   </Rule>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign '{0}' with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
    <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   </Rule>
   <Rule TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303">
    <Resolution Name="Default">{0} passes a literal as parameter {1} of a call to {2}. Retrieve the following string argument from a resource table instead: '{3}'</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
    <Resolution Name="NoAttr">'{0}' should be marked with CLSCompliantAttribute and its value should be true.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in VB) of {0} is never used. Mark the member as static (or Shared in VB) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="ReviewImperativeSecurity" Category="Microsoft.Security" CheckId="CA2103">
    <Resolution Name="ClassMember">Review the following for a possible security vulnerability: In {0}, the class member {1} is being passed to a '{2}' constructor.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
