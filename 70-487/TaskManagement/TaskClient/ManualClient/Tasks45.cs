//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskService.BusinessEntities
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AssignedToField;
        
        private System.DateTime DueDateField;
        
        private int TaskNumberField;
        
        private string DescriptionField;
        
        private TaskService.BusinessEntities.TaskStatus StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo
        {
            get
            {
                return this.AssignedToField;
            }
            set
            {
                this.AssignedToField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate
        {
            get
            {
                return this.DueDateField;
            }
            set
            {
                this.DueDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TaskNumber
        {
            get
            {
                return this.TaskNumberField;
            }
            set
            {
                this.TaskNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TaskService.BusinessEntities.TaskStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskStatus", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    public enum TaskStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assigned = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overdue = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompletedOnTime = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompletedLate = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultInfo", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    public partial class FaultInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ErrorMessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://alexeypr.com/2015/05/Tasks", ConfigurationName="TaskService")]
public interface TaskService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/AddTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/AddTaskResponse")]
    int AddTask(TaskService.BusinessEntities.Task t);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/AddTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/AddTaskResponse")]
    System.Threading.Tasks.Task<int> AddTaskAsync(TaskService.BusinessEntities.Task t);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/GetTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/GetTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(TaskService.BusinessEntities.FaultInfo), Action="http://alexeypr.com/2015/05/Tasks/TaskService/GetTaskFaultInfoFault", Name="FaultInfo", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    TaskService.BusinessEntities.Task GetTask(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/GetTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/GetTaskResponse")]
    System.Threading.Tasks.Task<TaskService.BusinessEntities.Task> GetTaskAsync(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/AssignTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/AssignTaskResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(TaskService.BusinessEntities.FaultInfo), Action="http://alexeypr.com/2015/05/Tasks/TaskService/AssignTaskFaultInfoFault", Name="FaultInfo", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    void AssignTask(int taskNumber, string owner);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/AssignTask", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/AssignTaskResponse")]
    System.Threading.Tasks.Task AssignTaskAsync(int taskNumber, string owner);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/GetTasksByOwner", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/GetTasksByOwnerResponse")]
    TaskService.BusinessEntities.Task[] GetTasksByOwner(string owner);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/GetTasksByOwner", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/GetTasksByOwnerResponse")]
    System.Threading.Tasks.Task<TaskService.BusinessEntities.Task[]> GetTasksByOwnerAsync(string owner);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/IsTaskCompleted", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/IsTaskCompletedResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(TaskService.BusinessEntities.FaultInfo), Action="http://alexeypr.com/2015/05/Tasks/TaskService/IsTaskCompletedFaultInfoFault", Name="FaultInfo", Namespace="http://schemas.datacontract.org/2004/07/TaskService.BusinessEntities")]
    bool IsTaskCompleted(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/2015/05/Tasks/TaskService/IsTaskCompleted", ReplyAction="http://alexeypr.com/2015/05/Tasks/TaskService/IsTaskCompletedResponse")]
    System.Threading.Tasks.Task<bool> IsTaskCompletedAsync(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://alexeypr.com/2015/05/Tasks/TaskService/MarkTaskCompleted")]
    void MarkTaskCompleted(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://alexeypr.com/2015/05/Tasks/TaskService/MarkTaskCompleted")]
    System.Threading.Tasks.Task MarkTaskCompletedAsync(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://alexeypr.com/2015/05/Tasks/TaskService/DeleteTask")]
    void DeleteTask(int taskNumber);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://alexeypr.com/2015/05/Tasks/TaskService/DeleteTask")]
    System.Threading.Tasks.Task DeleteTaskAsync(int taskNumber);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface TaskServiceChannel : TaskService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TaskServiceClient : System.ServiceModel.ClientBase<TaskService>, TaskService
{
    
    public TaskServiceClient()
    {
    }
    
    public TaskServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public TaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public TaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int AddTask(TaskService.BusinessEntities.Task t)
    {
        return base.Channel.AddTask(t);
    }
    
    public System.Threading.Tasks.Task<int> AddTaskAsync(TaskService.BusinessEntities.Task t)
    {
        return base.Channel.AddTaskAsync(t);
    }
    
    public TaskService.BusinessEntities.Task GetTask(int taskNumber)
    {
        return base.Channel.GetTask(taskNumber);
    }
    
    public System.Threading.Tasks.Task<TaskService.BusinessEntities.Task> GetTaskAsync(int taskNumber)
    {
        return base.Channel.GetTaskAsync(taskNumber);
    }
    
    public void AssignTask(int taskNumber, string owner)
    {
        base.Channel.AssignTask(taskNumber, owner);
    }
    
    public System.Threading.Tasks.Task AssignTaskAsync(int taskNumber, string owner)
    {
        return base.Channel.AssignTaskAsync(taskNumber, owner);
    }
    
    public TaskService.BusinessEntities.Task[] GetTasksByOwner(string owner)
    {
        return base.Channel.GetTasksByOwner(owner);
    }
    
    public System.Threading.Tasks.Task<TaskService.BusinessEntities.Task[]> GetTasksByOwnerAsync(string owner)
    {
        return base.Channel.GetTasksByOwnerAsync(owner);
    }
    
    public bool IsTaskCompleted(int taskNumber)
    {
        return base.Channel.IsTaskCompleted(taskNumber);
    }
    
    public System.Threading.Tasks.Task<bool> IsTaskCompletedAsync(int taskNumber)
    {
        return base.Channel.IsTaskCompletedAsync(taskNumber);
    }
    
    public void MarkTaskCompleted(int taskNumber)
    {
        base.Channel.MarkTaskCompleted(taskNumber);
    }
    
    public System.Threading.Tasks.Task MarkTaskCompletedAsync(int taskNumber)
    {
        return base.Channel.MarkTaskCompletedAsync(taskNumber);
    }
    
    public void DeleteTask(int taskNumber)
    {
        base.Channel.DeleteTask(taskNumber);
    }
    
    public System.Threading.Tasks.Task DeleteTaskAsync(int taskNumber)
    {
        return base.Channel.DeleteTaskAsync(taskNumber);
    }
}
