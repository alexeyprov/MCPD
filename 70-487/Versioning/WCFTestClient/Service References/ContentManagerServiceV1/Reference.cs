//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTestClient.ContentManagerServiceV1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkItem", Namespace="http://alexeypr.com/Versioning/2015/10/")]
    [System.SerializableAttribute()]
    public partial class LinkItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private string UrlField;
        
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://alexeypr.com/Versioning/2015/10", ConfigurationName="ContentManagerServiceV1.ContentManagerContract")]
    public interface ContentManagerContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/GetLinkItem", ReplyAction="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/GetLinkItemResponse" +
            "")]
        WCFTestClient.ContentManagerServiceV1.LinkItem GetLinkItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/GetLinkItem", ReplyAction="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/GetLinkItemResponse" +
            "")]
        System.Threading.Tasks.Task<WCFTestClient.ContentManagerServiceV1.LinkItem> GetLinkItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/UpdateLinkItem", ReplyAction="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/UpdateLinkItemRespo" +
            "nse")]
        WCFTestClient.ContentManagerServiceV1.LinkItem UpdateLinkItem(WCFTestClient.ContentManagerServiceV1.LinkItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/UpdateLinkItem", ReplyAction="http://alexeypr.com/Versioning/2015/10/ContentManagerContract/UpdateLinkItemRespo" +
            "nse")]
        System.Threading.Tasks.Task<WCFTestClient.ContentManagerServiceV1.LinkItem> UpdateLinkItemAsync(WCFTestClient.ContentManagerServiceV1.LinkItem item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ContentManagerContractChannel : WCFTestClient.ContentManagerServiceV1.ContentManagerContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentManagerContractClient : System.ServiceModel.ClientBase<WCFTestClient.ContentManagerServiceV1.ContentManagerContract>, WCFTestClient.ContentManagerServiceV1.ContentManagerContract {
        
        public ContentManagerContractClient() {
        }
        
        public ContentManagerContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentManagerContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagerContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentManagerContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFTestClient.ContentManagerServiceV1.LinkItem GetLinkItem(int id) {
            return base.Channel.GetLinkItem(id);
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.ContentManagerServiceV1.LinkItem> GetLinkItemAsync(int id) {
            return base.Channel.GetLinkItemAsync(id);
        }
        
        public WCFTestClient.ContentManagerServiceV1.LinkItem UpdateLinkItem(WCFTestClient.ContentManagerServiceV1.LinkItem item) {
            return base.Channel.UpdateLinkItem(item);
        }
        
        public System.Threading.Tasks.Task<WCFTestClient.ContentManagerServiceV1.LinkItem> UpdateLinkItemAsync(WCFTestClient.ContentManagerServiceV1.LinkItem item) {
            return base.Channel.UpdateLinkItemAsync(item);
        }
    }
}
